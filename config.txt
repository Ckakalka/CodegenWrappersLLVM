<class>
class W_${ClassName} {
public:
    explicit W_${ClassName}(llvm::Value* value, ${ClassName}* ${ClassName})
        : value_(value), ${ClassName}_(${ClassName})
    {
        Assert(value->getType() == PtrType_${ClassName});
    }
private:
    llvm::Value* value_; // ${ClassName}
    ${ClassName}* ${ClassName}_;
public:
<\class>

<method>
    llvm::Value* get_${FieldName}(llvm::IRBuilder& b) {
        return b.CreateStructGEP(value_, ${FieldNumber});
    }
<\method>

<method>
    llvm::Value* getReg_${FieldName}(llvm::IRBuilder& b) {
        return b.CreateLoad(get_${FieldName}(b));
    }
<\method>

<method>
    llvm::Value* set_${FieldName}(llvm::IRBuilder& b, llvm::Value* value) {
        return b.CreateStore(value, get_${FieldName}(b));
    }
<\method>


<class>
};
<\class>
